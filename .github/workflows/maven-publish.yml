# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  depchecktest:
    runs-on: ubuntu-latest
    name: depcheck_test
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: 11

      - name: Build project with Maven
        run: mvn clean install

      - name: Depcheck
        uses: dependency-check/dependency-check-action@v2
        id: Depcheck
        with:
          project: 'Auth0SourceConnector'
          path: '.'
          format: 'HTML'
          out: 'reports' # this is the default, no need to specify unless you wish to override it
          args: '--failOnCVSS 7 --enableRetired'

      - name: Upload Test results
        uses: actions/upload-artifact@v2
        with:
          name: Depcheck report
          path: ${{github.workspace}}/reports

  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: 11

      - name: Build Maven
        run: mvn clean package

      - name: Upload Fat JAR to GitHub Release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./target/my-project-fat.jar
          asset_name: ${{ github.ref }}/fat-jar
          asset_content_type: application/java-archive

      - name: Upload JAR to GitHub Release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./target/my-project.jar
          asset_name: ${{ github.ref }}/jar
          asset_content_type: application/java-archive
